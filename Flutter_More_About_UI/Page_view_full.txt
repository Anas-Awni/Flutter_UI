import 'dart:async';
//import 'package:flutter_page_view_indicator/flutter_page_view_indicator.dart';
//import 'package:page_view_indicator/page_view_indicator.dart';
//import 'package:page_view_dot_indicator/page_view_dot_indicator.dart';
import 'package:shared_preferences/shared_preferences.dart';

import 'package:flutter/material.dart';
import 'main.dart';
import 'main_splash_screen.dart';

class Data {
  final String title;
  final String description;
  final String imageUrl;
  final IconData iconData;

  Data({
    required this.title,
    required this.description,
    required this.imageUrl,
    required this.iconData,
  });
}

class PView extends StatefulWidget {
  const PView({Key? key}) : super(key: key);

  @override
  State<PView> createState() => _PViewState();
}

class _PViewState extends State<PView> {
  final PageController _controller = PageController(
    initialPage: 0,
  );
  int _currentIndex = 0;
  // final _pageIndexNotifier = ValueNotifier<int>(0);

  final List<Data> myData = [
    Data(
      title: "Page 1 ",
      description: "you are in page #1",
      imageUrl: "images/q1.jpg",
      iconData: Icons.add_location,
    ),
    Data(
      title: "Page 2 ",
      description: "you are in page #2",
      imageUrl: "images/q2.jpg",
      iconData: Icons.add_circle,
    ),
    Data(
      title: "Page 3 ",
      description: "you are in page #3",
      imageUrl: "images/q3.jpg",
      iconData: Icons.add_task,
    ),
    Data(
        title: "Page 4 ",
        description: "you are in page #4",
        imageUrl: "images/q4.jpg",
        iconData: Icons.add_reaction),
  ];

  @override
  void initState() {
    super.initState();
    Timer.periodic(Duration(seconds: 6), (timer) {
      if (_currentIndex < 3) _currentIndex++;

      _controller.animateToPage(
        _currentIndex,
        duration: Duration(milliseconds: 300),
        curve: Curves.easeIn,
      );
    });
  }

  Widget build(BuildContext context) {
    return MaterialApp(
      debugShowCheckedModeBanner: false,
      routes: {
        '/a': (ctx) => MyHomePage(),
        '/b': (ctx) => MainSplashScreen(),
      },
      home: Scaffold(
        body: Stack(
          alignment: Alignment(0, 0.7),
          children: [
            Builder(
              builder: (ctx) => PageView(
                controller: _controller,
                children: myData
                    .map((item) => Container(
                          decoration: BoxDecoration(
                            image: DecorationImage(
                              image: ExactAssetImage(item.imageUrl),
                              fit: BoxFit.cover,
                            ),
                          ),
                          child: Column(
                            mainAxisAlignment: MainAxisAlignment.center,
                            children: [
                              Icon(item.iconData, size: 130),
                              SizedBox(height: 50),
                              Text(item.title,
                                  style: TextStyle(
                                      color: Colors.black,
                                      fontWeight: FontWeight.bold,
                                      fontSize: 35)),
                              SizedBox(height: 10),
                              Text(
                                item.description,
                                style: TextStyle(
                                    color: Colors.white,
                                    fontWeight: FontWeight.bold,
                                    fontSize: 35),
                                textAlign: TextAlign.center,
                              ),
                            ],
                          ),
                        ))
                    .toList(),
                onPageChanged: (val) {
                  // _pageIndexNotifier.value = val;
                  setState(() {
                    _currentIndex = val;
                    /*  if (_currentIndex == 3) {
                      Future.delayed(Duration(seconds: 2),
                          () => Navigator.of(ctx).pushNamed('/b'));
                    }*/
                  });
                },
              ),
            ),
            /*
            PageViewDotIndicator(
              currentItem: _pageIndexNotifer.value,
              count:myData.length ,
              unselectedColor:Colors.black,
              selectedColor:Colors.blue,
              duration: const Duration(milliseconds:200),
              padding:EdgeInsert.zero,
              alignment:Alignment.bottomCenter,

            ),
            */
            Indicator(_currentIndex),
            /* PageViewIndicator(
              pageIndexNotifier: _pageIndexNotifier,
              length: myData.length,
              normalBuilder: (animationController, index) => Circle(
                size: 8.0,
                color: Colors.white,
              ),
              highlightedBuilder: (animationController, index) =>
                  ScaleTransition(
                scale: CurvedAnimation(
                  parent: animationController,
                  curve: Curves.ease,
                ),
                child: Icon(Icons.star),
              ),
            ),*/
            Builder(
              builder: (ctx) => Align(
                alignment: Alignment(0, 0.93),
                child: Container(
                  width: double.infinity,
                  margin: EdgeInsets.symmetric(horizontal: 10),
                  child: RaisedButton(
                    padding: EdgeInsets.all(7),
                    color: Colors.red,
                    child: Text(
                      "Get Started",
                      style: TextStyle(color: Colors.white, fontSize: 25),
                    ),
                    onPressed: () async {
                      Navigator.of(ctx).pushNamed('/b');
                      SharedPreferences prefs =
                          await SharedPreferences.getInstance();
                      prefs.setBool('x', true);
                    },
                  ),
                ),
              ),
            ),
          ],
        ),
      ),
    );
  }
}

class Indicator extends StatelessWidget {
  final int index;
  Indicator(this.index);
  @override
  Widget build(BuildContext context) {
    return Align(
      alignment: Alignment(0, 0.7),
      child: Row(
        mainAxisAlignment: MainAxisAlignment.center,
        children: [
          buildContainer(0, index == 0 ? Colors.green : Colors.red),
          buildContainer(1, index == 1 ? Colors.green : Colors.red),
          buildContainer(2, index == 2 ? Colors.green : Colors.red),
          buildContainer(3, index == 3 ? Colors.green : Colors.red),
        ],
      ),
    );
  }

  Widget buildContainer(int i, Color color) {
    return index == i
        ? Icon(Icons.star)
        : Container(
            margin: EdgeInsets.all(4),
            height: 15,
            width: 15,
            decoration: BoxDecoration(
              color: Colors.white,
              shape: BoxShape.circle,
            ),
          );
  }
}
